{
  "title": "Universal neural field computation",
  "authors": "Peter beim Graben, Roland Potthast",
  "year": 2013,
  "url": "http://arxiv.org/abs/1312.3550v1",
  "abstract": "Turing machines and G\\\"odel numbers are important pillars of the theory of\ncomputation. Thus, any computational architecture needs to show how it could\nrelate to Turing machines and how stable implementations of Turing computation\nare possible. In this chapter, we implement universal Turing computation in a\nneural field environment. To this end, we employ the canonical symbologram\nrepresentation of a Turing machine obtained from a G\\\"odel encoding of its\nsymbolic repertoire and generalized shifts. The resulting nonlinear dynamical\nautomaton (NDA) is a piecewise affine-linear map acting on the unit square that\nis partitioned into rectangular domains. Instead of looking at point dynamics\nin phase space, we then consider functional dynamics of probability\ndistributions functions (p.d.f.s) over phase space. This is generally described\nby a Frobenius-Perron integral transformation that can be regarded as a neural\nfield equation over the unit square as feature space of a dynamic field theory\n(DFT). Solving the Frobenius-Perron equation yields that uniform p.d.f.s with\nrectangular support are mapped onto uniform p.d.f.s with rectangular support,\nagain. We call the resulting representation \\emph{dynamic field automaton}.",
  "citation": 6
}