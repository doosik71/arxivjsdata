{
  "title": "Quantum Algorithm Implementations for Beginners",
  "authors": "Abhijith J., Adetokunbo Adedoyin, John Ambrosiano, Petr Anisimov, William Casper, Gopinath Chennupati, Carleton Coffrin, Hristo Djidjev, David Gunter, Satish Karra, Nathan Lemons, Shizeng Lin, Alexander Malyzhenkov, David Mascarenas, Susan Mniszewski, Balu Nadiga, Daniel O'Malley, Diane Oyen, Scott Pakin, Lakshman Prasad, Randy Roberts, Phillip Romero, Nandakishore Santhi, Nikolai Sinitsyn, Pieter J. Swart, James G. Wendelberger, Boram Yoon, Richard Zamora, Wei Zhu, Stephan Eidenbenz, Andreas BÃ¤rtschi, Patrick J. Coles, Marc Vuffray, Andrey Y. Lokhov",
  "year": 2018,
  "url": "http://arxiv.org/abs/1804.03719v3",
  "abstract": "As quantum computers become available to the general public, the need has\narisen to train a cohort of quantum programmers, many of whom have been\ndeveloping classical computer programs for most of their careers. While\ncurrently available quantum computers have less than 100 qubits, quantum\ncomputing hardware is widely expected to grow in terms of qubit count, quality,\nand connectivity. This review aims to explain the principles of quantum\nprogramming, which are quite different from classical programming, with\nstraightforward algebra that makes understanding of the underlying fascinating\nquantum mechanical principles optional. We give an introduction to quantum\ncomputing algorithms and their implementation on real quantum hardware. We\nsurvey 20 different quantum algorithms, attempting to describe each in a\nsuccinct and self-contained fashion. We show how these algorithms can be\nimplemented on IBM's quantum computer, and in each case, we discuss the results\nof the implementation with respect to differences between the simulator and the\nactual hardware runs. This article introduces computer scientists, physicists,\nand engineers to quantum algorithms and provides a blueprint for their\nimplementations."
}